{"version":3,"sources":["components/context/urinal/urinalContext.js","components/urinal/Urinal.js","components/urinal/Urinals.js","components/context/urinal/urinalReducer.js","components/context/types.js","components/context/urinal/UrinalState.js","components/context/layout/layoutContext.js","components/context/layout/layoutReducer.js","components/context/layout/LayoutState.js","components/layout/Header.js","components/layout/Share.js","components/layout/Donate.js","components/layout/CryptoDonateModal.js","components/layout/Spinner.js","components/urinal/Options.js","components/layout/Footer.js","App.js","index.js"],"names":["UrinalContext","createContext","Urinal","props","flipOccupation","useContext","urinal","id","status","usable","onClick","className","Urinals","urinalContext","addUrinal","removeUrinal","urinals","max_urinals","style","urinalsStyle","map","key","length","display","justifyContent","alignItems","textAlign","padding","margin","UrinalReducer","state","action","type","payload","check_symmetry","aggressive","acceptable_gap","min_gap","UrinalState","useReducer","dispatch","whereCanIPee","num_urinals","urinals_in","forEach","push","right_distance","left_distance","left","right","minimum_distance","urinal_index","Infinity","usable_min","distance","usable_acceptable","current_distance","farthest_distance","best_spaced_indexes","usable_territorial","Array","fill","index","usable_symmetry","urinals_in_copy","urinals_in_copy_reversed","reverse","arraysEqual","urinals_out","arrayOR","a","b","and_array","i","arrayAND","Provider","value","slice","updateSymmetry","symmetry_bool","updateAggressive","aggressive_bool","updateMinGap","new_min_gap","updateAcceptableGap","new_acceptable_gap","children","LayoutContext","LayoutReducer","show_settings","LayoutState","toggleSettings","Header","Share","share_url","window","location","href","TwitterShareButton","url","title","TwitterIcon","round","size","RedditShareButton","RedditIcon","FacebookMessengerShareButton","FacebookMessengerIcon","FacebookShareButton","FacebookIcon","Donate","useEffect","marginRight","target","CryptoDonateModal","cryptoDomain","colors","primary","secondary","button","buttonSecondary","text","thanks","copied","Spinner","decreaseText","increaseText","increment","initialValue","min","max","onChange","inputElement","useRef","useState","setValue","styles","outerStyles","decreaseStyles","newVal","Number","current","inputStyles","ref","pattern","name","e","val","isNaN","increaseStyles","position","width","border","fontSize","height","borderRadius","background","color","boxSizing","fontWeight","cursor","transition","opacity","Options","htmlFor","checked","Footer","App","M","AutoInit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d553480b.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nconst UrinalContext = createContext();\r\n\r\nexport default UrinalContext;","import React, {useContext} from 'react';\r\nimport UrinalContext from '../context/urinal/urinalContext';\r\n\r\nconst Urinal = (props) => {\r\n\r\n    const urinalContext = useContext(UrinalContext);\r\n    const { flipOccupation } = urinalContext\r\n\r\n    const { urinal } = props;\r\n    const { id, status, usable } = urinal;\r\n\r\n    const urinalClick = () => {\r\n        flipOccupation(id);\r\n    }\r\n\r\n    return (\r\n        <button onClick={urinalClick} className={'urinal ' + (status === \"occupied\" ? \"occupied\" : (usable ? ' good' : ' bad'))}>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Urinal;\r\n","import React, {useContext} from 'react'\r\nimport UrinalContext from '../context/urinal/urinalContext';\r\nimport Urinal from './Urinal';\r\n\r\nconst Urinals = () => {\r\n\r\n    const urinalContext = useContext(UrinalContext);\r\n\r\n    const { addUrinal, removeUrinal } = urinalContext;\r\n\r\n    const { urinals, max_urinals } = urinalContext;\r\n\r\n    return (\r\n        <div className='row' style={urinalsStyle}>\r\n            {urinals.map((urinal) => <Urinal key={urinal.id} urinal={urinal}/>)}\r\n            <div>\r\n                {urinals.length < max_urinals && (\r\n                <div>\r\n                    <button onClick={addUrinal} className=\"add-remove green\">\r\n                        <i className=\"material-icons white-text\">add</i>\r\n                    </button>\r\n                </div>\r\n                )}\r\n                {urinals.length > 1 && (\r\n                <div>\r\n                    <button onClick={removeUrinal} className=\"add-remove red\">\r\n                        <i className=\"material-icons white-text\">remove</i>\r\n                    </button>\r\n                </div>\r\n                )}\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Urinals;\r\n\r\nconst urinalsStyle = {\r\n    display: 'flex',\r\n    //margin: '50px 50px',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    padding: 0,\r\n    margin: 0\r\n};","import {\r\n    LOAD_URINALS,\r\n    UPDATE_SYMMETRY,\r\n    UPDATE_AGGRESSIVE,\r\n    UPDATE_ACCEPTABLE,\r\n    UPDATE_MIN_GAP\r\n} from '../types'\r\n\r\nconst UrinalReducer = (state, action) => {\r\n    switch(action.type){\r\n        case LOAD_URINALS:\r\n            return {\r\n                ...state,\r\n                urinals: action.payload\r\n            }\r\n        case UPDATE_SYMMETRY:\r\n            return {\r\n                ...state,\r\n                check_symmetry: action.payload\r\n            }\r\n        case UPDATE_AGGRESSIVE:\r\n            return {\r\n                ...state,\r\n                aggressive: action.payload\r\n            }\r\n        case UPDATE_ACCEPTABLE:\r\n            return {\r\n                ...state,\r\n                acceptable_gap: action.payload\r\n            }\r\n        case UPDATE_MIN_GAP:\r\n            return {\r\n                ...state,\r\n                min_gap: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default UrinalReducer;","// URINAL\r\nexport const LOAD_URINALS = \"LOAD_URINALS\";\r\nexport const ADD_URINAL = \"ADD_URINAL\";\r\nexport const REMOVE_URINAL = \"REMOVE_URINAL\";\r\nexport const UPDATE_SYMMETRY = \"UPDATE_SYMMETRY\";\r\nexport const UPDATE_AGGRESSIVE = \"UPDATE_AGGRESSIVE\";\r\nexport const UPDATE_ACCEPTABLE = \"UPDATE_ACCEPTABLE\";\r\nexport const UPDATE_MIN_GAP = \"UPDATE_MIN_GAP\";\r\n\r\n\r\n// LAYOUT\r\nexport const TOGGLE_SETTINGS = \"TOGGLE_SETTINGS\";","import React, {useReducer} from 'react'\r\nimport UrinalContext from './urinalContext';\r\nimport UrinalReducer from './urinalReducer';\r\nimport {\r\n    LOAD_URINALS,\r\n    UPDATE_SYMMETRY,\r\n    UPDATE_AGGRESSIVE,\r\n    UPDATE_MIN_GAP,\r\n    UPDATE_ACCEPTABLE\r\n} from '../types';\r\n\r\n// check environment\r\nif(process.env.NODE_ENV !== 'production'){\r\n    \r\n} else {\r\n    \r\n}\r\n\r\nconst UrinalState = props => {\r\n    const initialState = {\r\n        urinals: [\r\n            {\r\n                id: 0,\r\n                status: \"empty\",\r\n                usable: true\r\n            },\r\n            {\r\n                id: 1,\r\n                status: \"empty\",\r\n                usable: true\r\n            },\r\n            {\r\n                id: 2,\r\n                status: \"empty\",\r\n                usable: true\r\n            },\r\n            {\r\n                id: 3,\r\n                status: \"empty\",\r\n                usable: true\r\n            },\r\n            {\r\n                id: 4,\r\n                status: \"empty\",\r\n                usable: true\r\n            }\r\n        ],\r\n        max_urinals: 10,\r\n        min_gap: 0,\r\n        acceptable_gap: 3,\r\n        aggressive: false,\r\n        check_symmetry: false\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(UrinalReducer, initialState);\r\n\r\n    let { urinals, max_urinals, aggressive, check_symmetry, min_gap, acceptable_gap } = state;\r\n\r\n    // add a urinal to the end\r\n    const addUrinal = () => {\r\n        if(urinals.length < max_urinals) {\r\n            urinals = [...urinals, {id: urinals.length, status: \"empty\", usable: true}]\r\n            dispatch({type: LOAD_URINALS, payload: whereCanIPee(urinals)})\r\n        }\r\n    }\r\n\r\n    // Evaluate urinals!\r\n    const whereCanIPee = (urinals) => {\r\n        \r\n        const num_urinals = urinals.length;\r\n    \r\n        // CREATE ARRAY OF 1s and 0s REPRESENTING URINAL OCCUPATION; 0 = occupied, 1 = available\r\n        let urinals_in = [];\r\n        urinals.forEach((urinal) => {\r\n            if(urinal.status === \"occupied\") urinals_in.push(1);\r\n            else urinals_in.push(0);\r\n        });\r\n\r\n            // console.log(urinals_in)\r\n\r\n        // For each urinal, find the smallest gap to the left or right to the next occupied urinal\r\n        let minimum_distance = [];\r\n        let right_distance, left_distance, left, right;\r\n        for(let urinal_index = 0; urinal_index < num_urinals; urinal_index++){\r\n            // check to the left\r\n            left_distance = Infinity;\r\n            if(urinal_index !== 0){\r\n                for (left = urinal_index; left >= 0; left--){\r\n                    left_distance = urinal_index - left;\r\n                    if(urinals_in[left - 1] === 1) break;\r\n                    if(left === 0) left_distance = Infinity;\r\n                }\r\n            }\r\n\r\n            // check to the right\r\n            right_distance = Infinity;\r\n            if(urinal_index !== num_urinals - 1){\r\n                for (right = urinal_index; right < num_urinals; right++){\r\n                    right_distance = right - urinal_index;\r\n                    if(urinals_in[right + 1] === 1) break;\r\n                    if(right === num_urinals -1) right_distance = Infinity;\r\n                }\r\n            }\r\n            \r\n            // push smallest distance\r\n            minimum_distance.push(right_distance < left_distance ? right_distance : left_distance);\r\n        }\r\n            // console.log(\"closest occupied urinal: \" + minimum_distance);\r\n\r\n\r\n        // create array with ones where min gap is met or exceeded\r\n        let usable_min = [];\r\n        minimum_distance.forEach((distance) => {\r\n            if(distance >= min_gap) usable_min.push(1);\r\n            else usable_min.push(0);\r\n        })\r\n            //console.log(\"min gap of \" + min_gap + \" met: \" + usable_min)\r\n\r\n        // create array with ones where gap is greater than or equal to acceptable gap\r\n        let usable_acceptable = [];\r\n        minimum_distance.forEach((distance) => {\r\n            if(distance >= acceptable_gap) usable_acceptable.push(1);\r\n            else usable_acceptable.push(0);\r\n        })\r\n            //console.log(\"acceptable gap of \" + acceptable_gap + \" met: \" + usable_acceptable)\r\n            \r\n\r\n        // Find urinals with furthest distance!\r\n        let farthest_distance = -1;\r\n        let best_spaced_indexes = []\r\n        let current_distance;\r\n        for(let urinal_index = 0; urinal_index < num_urinals; urinal_index++){\r\n            // if it's not occupied\r\n            if (urinals_in[urinal_index] === 0){\r\n                current_distance = minimum_distance[urinal_index];\r\n                // if it's the longest gap discovered so far, update longest gap and start over\r\n                if(current_distance > farthest_distance){\r\n                    best_spaced_indexes = [urinal_index];\r\n                    farthest_distance = current_distance;\r\n                } else if(current_distance === farthest_distance){\r\n                    best_spaced_indexes.push(urinal_index);\r\n                }\r\n            }\r\n        }\r\n    \r\n            //console.log(\"best urinal positions: \" + best_spaced_indexes)\r\n\r\n        // Create array with ones at best indexes based on spacing\r\n        let usable_territorial = new Array(num_urinals).fill(0);\r\n        best_spaced_indexes.forEach((index) => {\r\n            usable_territorial[index] = 1;\r\n        })\r\n\r\n    // SYMMETRY\r\n            //console.log('symmetry: ' + check_symmetry)\r\n        let usable_symmetry = new Array(num_urinals).fill(0);\r\n\r\n        if (check_symmetry){\r\n            for(let urinal_index = 0; urinal_index < num_urinals; urinal_index++){\r\n                // if urinal is not occupied\r\n                if(urinals_in[urinal_index] === 0){\r\n                    // Make a copy of urinals and set current index to occupied\r\n                    let urinals_in_copy = [...urinals_in];\r\n                    urinals_in_copy[urinal_index] = 1;\r\n\r\n                    // Reverse the copy and check if it would be identical reversed\r\n                    let urinals_in_copy_reversed = [...urinals_in_copy];\r\n                    urinals_in_copy_reversed.reverse();\r\n                \r\n                        // console.log(urinals_in_copy);\r\n                        // console.log(urinals_in_copy_reversed);\r\n                    if(arraysEqual(urinals_in_copy_reversed, urinals_in_copy)){\r\n                        // If it would be identical, then allow use of that urinal!\r\n                        // console.log(\"MATCH!\");\r\n                        usable_symmetry[urinal_index] = 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //console.log(usable_symmetry);\r\n    \r\n        // Find all gaps of the longest gap length, and where they start\r\n            \r\n\r\n    \r\n        // Merge Results\r\n        // It can either meet acceptable gap OR (meet min gap AND (be a best index OR create symmetry if symmetry setting set))\r\n        let urinals_out = arrayOR(usable_acceptable, arrayAND(usable_min, arrayOR(usable_territorial, usable_symmetry)));\r\n\r\n        // set urinal usable properties based on results\r\n        urinals.forEach((urinal) => {\r\n            if(urinals_out[urinal.id] === 1) urinal.usable = true\r\n            else urinal.usable = false;\r\n        });\r\n\r\n        return urinals;\r\n\r\n    }\r\n\r\n    const updateSymmetry = (symmetry_bool) => {\r\n        dispatch({type: UPDATE_SYMMETRY, payload: symmetry_bool});\r\n        check_symmetry = symmetry_bool;\r\n        dispatch({type: LOAD_URINALS, payload: whereCanIPee(urinals)})\r\n    }\r\n\r\n    const updateAggressive = (aggressive_bool) => {\r\n        dispatch({type: UPDATE_AGGRESSIVE, payload: aggressive_bool})\r\n        aggressive = aggressive_bool;\r\n        dispatch({type: LOAD_URINALS, payload: whereCanIPee(urinals)})\r\n    }\r\n\r\n    const updateMinGap = (new_min_gap) => {\r\n        //if(new_min_gap <= acceptable_gap){\r\n            dispatch({type: UPDATE_MIN_GAP, payload: new_min_gap})\r\n            min_gap = new_min_gap;\r\n            dispatch({type: LOAD_URINALS, payload: whereCanIPee(urinals)})\r\n        //}\r\n    }\r\n\r\n    const updateAcceptableGap = (new_acceptable_gap) => {\r\n        //if(new_acceptable_gap >= min_gap){\r\n            dispatch({type: UPDATE_ACCEPTABLE, payload: new_acceptable_gap})\r\n            acceptable_gap = new_acceptable_gap;\r\n            dispatch({type: LOAD_URINALS, payload: whereCanIPee(urinals)})\r\n        //}\r\n    }\r\n\r\n    // Flip urinal occupation\r\n    const flipOccupation = (id) => {\r\n        if (urinals[id].status !== \"occupied\"){\r\n            urinals[id].status = \"occupied\"\r\n        } else {\r\n            urinals[id].status = \"empty\"\r\n        }\r\n        \r\n        dispatch({type: LOAD_URINALS, payload: whereCanIPee(urinals)})\r\n    }\r\n\r\n    const removeUrinal = () => {\r\n        if(urinals.length > 1) {\r\n            dispatch({type: LOAD_URINALS, payload: whereCanIPee(urinals.slice(0, -1))})\r\n        }\r\n    }\r\n\r\n    // return provider\r\n    return <UrinalContext.Provider\r\n        value={{\r\n            urinals,\r\n            max_urinals,\r\n            min_gap,\r\n            acceptable_gap,\r\n            aggressive,\r\n            check_symmetry,\r\n            addUrinal,\r\n            removeUrinal,\r\n            flipOccupation,\r\n            updateSymmetry,\r\n            updateAggressive,\r\n            updateMinGap,\r\n            updateAcceptableGap\r\n        }} >\r\n            {props.children}\r\n    </UrinalContext.Provider>\r\n}\r\n\r\nexport default UrinalState;\r\n\r\n\r\n\r\n// FUNCTIONS FOR COMPARING ARRAYS\r\nfunction arraysEqual(a, b) {\r\n    if (a === b) return true;\r\n    if (a == null || b == null) return false;\r\n    if (a.length !== b.length) return false;\r\n  \r\n    for (var i = 0; i < a.length; ++i) {\r\n      if (a[i] !== b[i]) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction arrayAND(a, b) {\r\n    if (a == null || b == null) return false;\r\n    if (a.length !== b.length) return false;\r\n  \r\n    let and_array = new Array(a.length)\r\n    for (var i = 0; i < a.length; ++i) {\r\n      if (a[i] !== 0 && b[i] !== 0){\r\n        and_array[i] = 1;\r\n      } else {\r\n        and_array[i] = 0;\r\n      }\r\n    }\r\n    return and_array;\r\n}\r\n\r\nfunction arrayOR(a, b) {\r\n    if (a == null || b == null) return false;\r\n    if (a.length !== b.length) return false;\r\n  \r\n    let and_array = new Array(a.length)\r\n    for (var i = 0; i < a.length; ++i) {\r\n      if (a[i] !== 0 || b[i] !== 0){\r\n        and_array[i] = 1;\r\n      } else {\r\n        and_array[i] = 0;\r\n      }\r\n    }\r\n    return and_array;\r\n}","import {createContext} from 'react'\r\n\r\nconst LayoutContext = createContext();\r\n\r\nexport default LayoutContext;","import {\r\n    TOGGLE_SETTINGS\r\n} from '../types'\r\n\r\nconst LayoutReducer = (state, action) => {\r\n    switch(action.type){\r\n        case TOGGLE_SETTINGS:\r\n            return {\r\n                ...state,\r\n                show_settings: !state.show_settings\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default LayoutReducer;","import React, {useReducer} from 'react'\r\nimport LayoutContext from './layoutContext';\r\nimport LayoutReducer from './layoutReducer';\r\n\r\nimport {\r\n    TOGGLE_SETTINGS\r\n} from '../types';\r\n\r\n// check environment\r\nif(process.env.NODE_ENV !== 'production'){\r\n    \r\n} else {\r\n    \r\n}\r\n\r\nconst LayoutState = props => {\r\n    const initialState = {\r\n        show_settings: false\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(LayoutReducer, initialState);\r\n\r\n    let { show_settings } = state;\r\n\r\n    // add a urinal to the end\r\n    const toggleSettings = () => {\r\n        dispatch({type: TOGGLE_SETTINGS});\r\n    }\r\n\r\n    // return provider\r\n    return <LayoutContext.Provider\r\n        value={{\r\n            toggleSettings,\r\n            show_settings\r\n        }} >\r\n            {props.children}\r\n    </LayoutContext.Provider>\r\n}\r\n\r\nexport default LayoutState;\r\n\r\n","import React, {useContext} from 'react';\r\nimport LayoutContext from '../context/layout/layoutContext';\r\n\r\nconst Header = () => {\r\n\r\n    const layoutContext = useContext(LayoutContext);\r\n    const { toggleSettings } = layoutContext;\r\n\r\n    return (\r\n\r\n    // <div className=\"navbar-fixed lime accent-2\">\r\n    //     <nav>\r\n    //         <a href=\"#settings\" onClick={toggleSettings}>\r\n    //             <i className=\"material-icons black-text sidenav-trigger\">settings</i>\r\n    //         </a>\r\n    //         <div className=\"nav-wrapper lime accent-2\">\r\n    //             <a href=\"#!\" className=\"black-text brand-logo\">Where Can I Pee?</a>\r\n    //         </div>\r\n    //     </nav>\r\n    // </div>\r\n\r\n    <header className=\"nav lime accent-2\">\r\n        \r\n        {/* <a href=\"#settings\" > */}\r\n        <i onClick={toggleSettings} className=\"material-icons black-text settings-button\">settings</i>\r\n        {/* </a> */}\r\n        <h1 className=\"black-text\">Where Can I Pee?</h1>\r\n        <h5>read: the primal male mind</h5>\r\n    </header>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from 'react'\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport { FacebookShareButton, FacebookIcon, \r\n         RedditShareButton, RedditIcon, \r\n         TwitterShareButton, TwitterIcon,\r\n         FacebookMessengerShareButton, FacebookMessengerIcon} from 'react-share';\r\n\r\n\r\nconst Share = () => {\r\n\r\n\r\n    let share_url = window.location.href\r\n    let iconSize = 40;\r\n\r\n    return (\r\n      <div className=\"fixed-action-btn\">\r\n        <a href='#share' className=\"btn-floating blue btn-large\">\r\n            <i className=\"large material-icons\">share</i>\r\n        </a>\r\n        <ul>\r\n            <li>\r\n              <a href='#share' className=\"btn-floating blue\">\r\n                <TwitterShareButton url={share_url} title={\"Share to Twitter\"}>\r\n                  <TwitterIcon round size={iconSize} />\r\n                </TwitterShareButton>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#share' className=\"btn-floating red\">\r\n                <RedditShareButton url={share_url} title=\"Share to Reddit\">\r\n                  <RedditIcon round size={iconSize} />\r\n                </RedditShareButton>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#share' className=\"btn-floating blue\">\r\n                <FacebookMessengerShareButton url={share_url} title=\"Share to Facebook Messenger\">\r\n                  <FacebookMessengerIcon round size={iconSize} />\r\n                </FacebookMessengerShareButton>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#share' className=\"btn-floating blue\">\r\n                <FacebookShareButton url={share_url} title=\"Share to Facebook\">\r\n                  <FacebookIcon round size={iconSize} />\r\n                </FacebookShareButton>\r\n              </a>\r\n            </li> \r\n        </ul>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Share;\r\n","import React, {useEffect} from 'react'\r\n\r\nconst Donate = () => {\r\n\r\n    useEffect(()=>{\r\n\r\n    }, [])\r\n\r\n    return (\r\n      <div className=\"fixed-action-btn\" style={{marginRight: '70px'}}>\r\n        <a href='#donate' className=\"btn-floating btn-large blue\">\r\n            <i className=\"large material-icons\">volunteer_activism</i>\r\n        </a>\r\n        <ul>\r\n            <li><a href=\"#crypto-modal\" className=\"btn-floating red modal-trigger\">\r\n                <i className=\"fab fa-btc\"></i>\r\n                {/* <i className=\"material-icons\"></i> */}\r\n            </a></li>\r\n            <li><a target=\"_blank\" href=\"https://www.paypal.com/donate?hosted_button_id=D3YABRLQ3W5KQ\" className=\"btn-floating blue\">\r\n                <i className=\"material-icons\">paid</i>\r\n            </a></li>\r\n        </ul>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Donate;\r\n","import React from 'react'\r\n//import 'materialize-css/dist/css/materialize.min.css';\r\nimport CryptoDonate from 'dot-crypto-donate-react';\r\n\r\nconst CryptoDonateModal = () => {\r\n\r\n    return (\r\n      <div id=\"crypto-modal\" className=\"modal\">\r\n        <div className=\"modal-content\">\r\n          <h4>Support content like this with a crypto donation</h4>\r\n          <p>Bitcoin and Ethereum accepted</p>\r\n          <CryptoDonate\r\n                cryptoDomain=\"dallinromney.crypto\"\r\n                // infuraApi=\"<insert-infura-api>\"\r\n                colors={{\r\n                    primary: \"#2096f3\",\r\n                    secondary: \"#fde199\",\r\n                    button: \"#1a78c2\",\r\n                    buttonSecondary: \"#fab601\",\r\n                    text: \"#ffffff\",\r\n                }}\r\n                text={{\r\n                    title: \"Donate\",\r\n                    thanks: \"Thank you for donating, see the below link for transaction\",\r\n                    copied: \"Address copied, please donate via wallet\",\r\n                }}\r\n                />\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Done</a>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default CryptoDonateModal;\r\n","import React, {useRef, useState} from 'react'\r\n\r\nconst Spinner = (props) => {\r\n\r\n    let {decreaseText, increaseText, increment, initialValue, min, max, onChange} = props;\r\n\r\n    decreaseText = decreaseText || 'Decrease quantity';\r\n    increaseText = increaseText || 'Increase quantity';\r\n    increment = increment || 1;\r\n    initialValue = initialValue || 0;\r\n    min = min || 0;\r\n    max = max || 10;\r\n\r\n    const inputElement = useRef(null);\r\n\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    const increaseQuantity = () => {\r\n        let newVal = Number(inputElement.current.value) + increment;\r\n        if(newVal <= max) {\r\n            setValue(newVal);\r\n            inputElement.current.value = newVal;\r\n            onChange(newVal);\r\n        }   \r\n    }\r\n    const decreaseQuantity = () => {\r\n        let newVal = Number(inputElement.current.value) - increment;\r\n        if(newVal >= min) {\r\n            setValue(newVal);\r\n            inputElement.current.value = newVal;\r\n            onChange(newVal);\r\n        }   \r\n    }\r\n\r\n    const changeQuantity = (e) => {\r\n        let val = inputElement.current.value;\r\n        if(isNaN(val)) setValue(initialValue);\r\n        else if(val > max) setValue (max);\r\n        else if(val < min) setValue (min);\r\n        else setValue(e.target.value)\r\n    }\r\n \r\n    return (\r\n        <div styles={outerStyles}>\r\n            <button style={decreaseStyles} onClick={decreaseQuantity} title={decreaseText} type=\"button\">\r\n                <i className=\"material-icons black-text\">remove</i>\r\n            </button>\r\n\r\n            <input style={inputStyles} ref={inputElement} pattern='[0-9]+' name='quantity' type='number' value={value} onChange={changeQuantity} />\r\n\r\n            <button style={increaseStyles} onClick={increaseQuantity} title={increaseText} type=\"button\">\r\n                <i className=\"material-icons black-text\">add</i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;\r\n\r\n\r\nconst outerStyles = {\r\n    position: 'relative',\r\n    width: '100%',\r\n    padding: '0',\r\n    margin: '0',\r\n    border: '0',\r\n    display: 'flex'\r\n}\r\n\r\nconst inputStyles={\r\n    fontSize: '3vw',\r\n    height: '4vw',\r\n    borderRadius: '2vw',\r\n    border: '0',\r\n    background: '#fff',\r\n    color: '#222',\r\n    //boxShadow: '0 10px 65px -10px rgba(0, 0, 0, 0.25)',\r\n    textAlign: 'center',\r\n    width: '50%',\r\n    boxSizing: 'border-box',\r\n    fontWeight: 'lighter',\r\n    display: 'inline'\r\n}\r\n  \r\nconst decreaseStyles = {\r\n    position: 'relative',\r\n    width: '4vw',\r\n    height: '4vw',\r\n    left: '4vw',\r\n    // top: '-0.4vw',\r\n    display: 'inline',\r\n    padding: '0',\r\n    margin: '0',\r\n    border: '0',\r\n    borderRadius: '2vw',\r\n    cursor: 'pointer',\r\n    transition: 'opacity 0.15s',\r\n    opacity: '0.7',\r\n    border: '1px solid'\r\n  }\r\n\r\n  const increaseStyles = {\r\n    position: 'relative',\r\n    width: '4vw',\r\n    height: '4vw',\r\n    left: '-4vw',\r\n    // top: '-0.4vw',\r\n    display: 'inline',\r\n    padding: '0',\r\n    margin: '0',\r\n    border: '0',\r\n    borderRadius: '2vw',\r\n    cursor: 'pointer',\r\n    transition: 'opacity 0.15s',\r\n    opacity: '0.7',\r\n    border: '1px solid'\r\n  }\r\n\r\n  //   [data-quantity] input:focus {\r\n//     outline: none;\r\n//     box-shadow: 0 5px 55px -10px rgba(0, 0, 0, 0.2), 0 0 4px #3fb0ff; /* Allows border radius on focus */\r\n//   }\r\n  \r\n//   [data-quantity] input[type=number]::-webkit-inner-spin-button,\r\n//   [data-quantity] input[type=number]::-webkit-outer-spin-button {\r\n//     -webkit-appearance: none;\r\n//     margin: 0;\r\n//   }\r\n  \r\n//   [data-quantity] input[type=number] {\r\n//     -moz-appearance: textfield;\r\n//   }\r\n  \r\n  \r\n//   [data-quantity] button:active {\r\n//     background-position-y: 1px;\r\n//     box-shadow: inset 0 2px 12px -4px #c5d1d9;\r\n//   }\r\n  \r\n//   [data-quantity] button:focus {\r\n//     outline: none;\r\n//   }\r\n  \r\n//   [data-quantity] button:hover {\r\n//     opacity: 1;\r\n//   }\r\n  \r\n//   [data-quantity] button.sub {\r\n//     left: 0.6rem;\r\n//   }\r\n  \r\n//   [data-quantity] button.add {\r\n//     right: 0.6rem;\r\n//     background-position-x: -2.8rem;\r\n//   }\r\n  ","import React, { useContext } from 'react'\r\nimport UrinalContext from '../context/urinal/urinalContext';\r\nimport LayoutContext from '../context/layout/layoutContext';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Options = () => {\r\n\r\n    const layoutContext = useContext(LayoutContext);\r\n    const { show_settings } = layoutContext;\r\n\r\n    const urinalContext = useContext(UrinalContext);\r\n    const { updateSymmetry, updateMinGap, updateAcceptableGap, min_gap, acceptable_gap, max_urinals} = urinalContext; //updateAggressive\r\n\r\n    const setSymmetry = (e) => {\r\n        updateSymmetry(e.target.checked);\r\n    }\r\n\r\n    // const setAggressive = (e) => {\r\n    //     updateAggressive(e.target.checked);\r\n    // }\r\n\r\n    const setMinGap = (value) => {\r\n        updateMinGap(value);\r\n    }\r\n\r\n    const setAcceptableGap = (value) => {\r\n        updateAcceptableGap(value);\r\n    }\r\n\r\n    return (\r\n        show_settings ? (\r\n        <div className=\"options\">\r\n\r\n            <div className=\"option-group\">\r\n                <label>Always-acceptable gap</label>\r\n                <Spinner increment={1} initialValue={acceptable_gap} min={min_gap} max={max_urinals} onChange={setAcceptableGap}/>\r\n            </div>\r\n            <div className=\"option-group\">\r\n                <label>Minimum gap</label>\r\n                <Spinner increment={1} initialValue={min_gap} min={0} max={acceptable_gap} onChange={setMinGap}/>\r\n            </div>\r\n            {/* <div className=\"switch\">\r\n                <label>\r\n                    Territorial\r\n                    <input type=\"checkbox\" onClick={setAggressive}/>\r\n                    <span className=\"lever\"></span>\r\n                    Aggressive\r\n                </label>\r\n            </div> */}\r\n            \r\n            {/* <div className=\"option-group\">\r\n                <label htmlFor=\"min\">Min</label>\r\n                <input name=\"min\" type='number' min='0' max={max_urinals} step='1' value={min_gap} onChange={setMinGap}/>\r\n            </div>\r\n            \r\n            <div className=\"option-group\">\r\n                <label htmlFor=\"acceptable\">Acceptable</label>\r\n                <input name=\"acceptable\" type='number' min='0' max={max_urinals} step='1' value={acceptable_gap} onChange={setAcceptableGap}/>\r\n            </div> */}\r\n\r\n            <div className=\"option-group\">\r\n                <label htmlFor=\"symmetry-switch\">Symmetry</label>\r\n                <div className=\"switch\" >\r\n                    <label>\r\n                        <input name=\"symmetry-switch\" type=\"checkbox\" onClick={setSymmetry}/>\r\n                        <span className=\"lever\"></span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n        ) : (\r\n            <div></div>\r\n        )\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Options","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Click a urinal to toggle occupation</p>\r\n            <p>Copyright 2021 &copy; Dallin Romney</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import './App.css';\nimport React, { useEffect} from 'react';\nimport Urinals from './components/urinal/Urinals';\n//import UrinalContext from './components/context/urinal/urinalContext';\nimport UrinalState from './components/context/urinal/UrinalState';\nimport LayoutState from './components/context/layout/LayoutState';\nimport Header from './components/layout/Header'\n\nimport Share from './components/layout/Share';\nimport Donate from './components/layout/Donate';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport CryptoDonateModal from './components/layout/CryptoDonateModal'\nimport Options from './components/urinal/Options';\nimport Footer from './components/layout/Footer'\n\nimport 'materialize-css/dist/css/materialize.min.css';\n\nfunction App() {\n\n  //const urinalContext = useContext(UrinalContext);\n\n  useEffect(()=>{\n    M.AutoInit();\n  }, []);\n\n  return (\n    <LayoutState>\n    <UrinalState>\n      <Header/>\n      \n      <Options/>\n      <div className=\"divider\"></div>\n      <Urinals/>\n\n      <Share/>\n      <Donate/>\n      <CryptoDonateModal/>\n      <Footer/>\n    </UrinalState>\n    </LayoutState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}